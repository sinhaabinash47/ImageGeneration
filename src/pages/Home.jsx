import React, { useState, useEffect } from 'react';
import { Loader, Card, FormField } from '../components';

const RendersCard = ({ data, title }) => {
    if (data?.length > 0) {
        return data.map((post) => <Card key={post._id} {...post} />)
    }

    return (
        <h2 className='mt-5 font-bold text-[#6449ff] text-xl uppercase'>{title}</h2>
    )

}

export const Home = () => {
    const [loading, setLoading] = useState(false);
    const [allpost, setAllPost] = useState(null);
    const [searchText, setSearchText] = useState('');

    useEffect(() => {
        const fetchPost = async () => {
            setLoading(true);
            try {
                // const response = await fetch('http://localhost:8080/api/v1/post', {
                //     method: 'GET',
                //     headers: {
                //         'Content-Type': 'application/json'
                //     },
                // })
                // if (response.ok) {
                //     const result = await response.json();
                //     console.log(result, 'result');
                //     // setAllPost(result?.data);
                // }
            } catch (error) {
                console.log(error);
            } finally {
                setLoading(false);
            }
        }
        fetchPost();
    }, []);

    return (
        <section className='max-w-7xl mx-auto'>
            <div>
                <h1 className='font-extrabold text-[#222328] text-[32px]'>
                    The Community Showcase
                </h1>
                <p className='mt-2 text-[#666e75] text-[16px] max-w[500px]'>
                    Browse through a collection of imaginative and visually stunning images generated by AI
                </p>
            </div>
            <div className='mt-16'>
                <FormField />
            </div>
            <div className='mt-10'>
                {loading ? (
                    <div className='flex justify-center items-center'>
                        <Loader />
                    </div>
                ) : (
                    <>
                        {searchText && (
                            <h2 className='font-medium text-[#666e75] text-xl mb-3'>
                                Show results for
                                <span className='text-[#222328]'>
                                    {searchText}
                                </span>
                            </h2>
                        )}
                        <div className='grid lg:grid-cols-4 sm:grid-cols-3 sx:grid-cols-2 grid-cols-1 gap-2'>
                            {searchText ? (
                                <RendersCard data={[]} title="No search results found" />
                            ) :
                                <RendersCard data={allpost} title="No posts found" />}
                        </div>
                    </>
                )}
            </div>
        </section>
    )
}
